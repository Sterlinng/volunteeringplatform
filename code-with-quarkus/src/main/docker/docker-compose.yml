version: '3.8'

services:
  backend:
    image: quay.io/quarkus/quarkus-distroless-image:3.6.4-java21
    container_name: quarkus-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      
"8080:8080"
  environment:
QUARKUS_PROFILE=prod
QUARKUS_DATASOURCE_USERNAME=${QUARKUS_DATASOURCE_USERNAME}
QUARKUS_DATASOURCE_PASSWORD=${QUARKUS_DATASOURCE_PASSWORD}
QUARKUS_DATASOURCE_JDBC_URL=jdbc:postgresql://postgres:5432/${POSTGRES_DB}
depends_on:
postgres

  frontend:
    image: node:18
    container_name: angular-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      
"4200:4200"
  command: bash -c "npm install && npm start"

  postgres:
    image: postgres:15
    container_name: postgres-db
    ports:
      
"5432:5432"
  environment:
    POSTGRES_USER: ${POSTGRES_USER}
    POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    POSTGRES_DB: ${POSTGRES_DB}
  volumes:
pgdata:/var/lib/postgresql/data

  jmeter:
    image: justb4/jmeter:5.5
    container_name: jmeter
    volumes:
      
./jmeter:/jmeter
  entrypoint: ["jmeter", "-n", "-t", "/jmeter/test-plan.jmx", "-l", "/jmeter/results.jtl"]

  pgbench:
    image: postgres:15
    container_name: pgbench
    depends_on:
      
postgres
  entrypoint: ["pgbench", "-h", "postgres", "-U", "${POSTGRES_USER}", "-i", "-s", "10"]

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      
"9090:9090"
  volumes:
./prometheus:/etc/prometheus
command:
"--config.file=/etc/prometheus/prometheus.yml"

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      
"3000:3000"
  environment:
GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
volumes:
grafana_data:/var/lib/grafana
depends_on:
prometheus

volumes:
  pgdata:
  grafana_data: